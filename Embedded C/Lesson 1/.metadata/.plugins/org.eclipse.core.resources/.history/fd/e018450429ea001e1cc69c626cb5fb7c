/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2024 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
#warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

//First SOlution

//RCC
#define RCC_BASE (0x40021000)
#define APB2ENR  *((volatile unsigned int* )(RCC_BASE + 0x18))

//GPIO
#define GPIOPA_BASE (0x40010800)
#define CRH  		*((volatile unsigned int* )(GPIOPA_BASE + 0x04))
//#define ODR  		*((volatile unsigned int* )(GPIOPA_BASE + 0x0c))


//Second Solution

typedef union{
	volatile unsigned int all_fields;
	struct{
	volatile unsigned reserved:13;
	volatile unsigned pin13:1;
	}PIN;
}ODR;

volatile ODR* ptr = (volatile ODR*)(GPIOPA_BASE +0X0c);



int main(void)
{

	int i;
	APB2ENR |= (1<<2);
	CRH &= 0xff0fffff;
	CRH |= 0x00200000;
	while(1)
	{
		ptr ->PIN.pin13 = 1;
		for(i=0;i<5000;i++);
		ptr ->PIN.pin13 = 0;
		for(i=0;i<5000;i++);
	}





}
