/*
 * RCC.c
 *
 *  Created on: May 23, 2024
 *      Author: Mohamed Shaban
 */

#include "RCC.h"
#include "STM32F103x6.h"

uint32 get_SYSCLK(void)
{

}
uint32 get_HCLK(void)
{

}

//Set and cleared by software to control the division factor of the APB low-speed clock
//(PCLK1).
//Warning: the software has to set correctly these bits to not exceed 36 MHz on this domain.
//0xx: HCLK not divided
//100: HCLK divided by 2
//101: HCLK divided by 4
//110: HCLK divided by 8
//111: HCLK divided by 16
uint8 APB1_scale[8] = {0,0,0,0,1,2,3,4};
const uint32 get_PCLK1(void)
{
	get_HCLK()>>APB1_scale[(RCC->CFGR>>8)&0b111];
}
//Set and cleared by software to control the division factor of the APB high-speed clock
//(PCLK2).
//0xx: HCLK not divided
//100: HCLK divided by 2
//101: HCLK divided by 4
//110: HCLK divided by 8
//111: HCLK divided by 16
const uint8 APB2_scale[8] = {0,0,0,0,1,2,3,4};
uint32 get_PCLK2(void)
{
	get_HCLK()>>APB2_scale[(RCC->CFGR>>11)&0b111];
}
