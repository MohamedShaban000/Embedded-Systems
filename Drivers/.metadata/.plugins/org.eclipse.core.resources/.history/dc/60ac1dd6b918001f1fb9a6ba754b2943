/*
 * STM32F103x6.h
 *
 *  Created on: May 16, 2024
 *      Author: Mohamed Shaban
 */

#ifndef STM32F103X6_H_
#define STM32F103X6_H_


//------------------------------------------------------
//Includes
//------------------------------------------------------
#include <stdlib.h>
#include <Platform_Data_Types.h>

//-------------------------------------------------------
//Base addresses for Memories
//-------------------------------------------------------

#define Flash_Memory_Base 				0x08000000UL
#define	System_Memory_Base				0x1FFFF000UL

#define	SRAM_Base						0x20000000UL
#define Peripherals_Base 				0x40000000UL
#define Cortex_M3_Peripherals_Base 		0xE0000000UL
#define NVIC_Base						0xE000E100UL

//NVIC Registers
#define  NVIC_ISER0					   ( *(vuint32*)(NVIC_Base+0x000) )
#define  NVIC_ISER1					   ( *(vuint32*)(NVIC_Base+0x004) )
#define  NVIC_ISER2					   ( *(vuint32*)(NVIC_Base+0x008) )
#define  NVIC_ICER0					   ( *(vuint32*)(NVIC_Base+0x080) )
#define  NVIC_ICER1					   ( *(vuint32*)(NVIC_Base+0x084) )
#define  NVIC_ICER2					   ( *(vuint32*)(NVIC_Base+0x088) )

//USART
#define USART1_Base					   0x40013800UL
#define USART2_Base					   0x40004400UL
#define USART3_Base					   0x40004800UL

//-----------------------------
//Base addresses for ABP2 Peripherals
//-----------------------------
//GPIO
#define GPIOA_Base		(0x40010800UL)
#define GPIOB_Base		(0x40010C00UL)
#define GPIOC_Base		(0x40011000UL)
#define GPIOD_Base		(0x40011400UL)
#define GPIOE_Base		(0x40011800UL)

#define EXTI_Base		(0x40010400UL)
#define AFIO_Base		(0x40010000UL)

//-----------------------------
//Base addresses for AHB Peripherals
//-----------------------------

#define RCC_Base		(0x40021000UL)


//-----------------------------
//Base addresses for AHB Peripherals
//-----------------------------



//-*-*-*-*-*-*-*-*-*-*-*-
//Peripheral register: GPIO
//-*-*-*-*-*-*-*-*-*-*-*

typedef struct{
	vuint32 CRL;
	vuint32 CRH;
	vuint32 IDR;
	vuint32 ODR;
	vuint32 BSRR;
	vuint32 BRR;
	vuint32 LCKR;
}GPIO_TypeDef;

//-*-*-*-*-*-*-*-*-*-*-*-
//Peripheral register: AFIO
//-*-*-*-*-*-*-*-*-*-*-*

typedef struct{
	vuint32 EVCR;
	vuint32 MAPR;
	vuint32 EXTICR[4];
	uint32 	RESERVED0;
	vuint32 MAPR2;
}AFIO_TypeDef;

//-*-*-*-*-*-*-*-*-*-*-*-
//Peripheral register: EXTI
//-*-*-*-*-*-*-*-*-*-*-*
typedef struct{
	vuint32 IMR;
	vuint32 EMR;
	vuint32 RTSR;
	vuint32 FTSR;
	vuint32 SWIER;
	vuint32 PR;
}EXTI_TypeDef;

//-*-*-*-*-*-*-*-*-*-*-*-
//Peripheral register: RCC
//-*-*-*-*-*-*-*-*-*-*-*
typedef struct{
	vuint32 CR;
	vuint32 CFGR;
	vuint32 CIR;
	vuint32 APB2RSTR;
	vuint32 APB1RSTR;
	vuint32 AHBENR;
	vuint32 APB2ENR;
	vuint32 APB1ENR;
	vuint32 BDCR;
	vuint32 CSR;
}RCC_TypeDef;



//Peripheral Instants
//-*-*-*-*-*-*-*-*-*-*-*
#define GPIOA						((GPIO_TypeDef*)GPIOA_Base)
#define GPIOB						((GPIO_TypeDef*)GPIOB_Base)
#define GPIOC						((GPIO_TypeDef*)GPIOC_Base)
#define GPIOD						((GPIO_TypeDef*)GPIOD_Base)
#define GPIOE						((GPIO_TypeDef*)GPIOE_Base)

#define RCC							((RCC_TypeDef*)RCC_Base)
#define EXTI						((EXTI_TypeDef*)EXTI_Base)
#define AFIO						((AFIO_TypeDef*)AFIO_Base)



//-*-*-*-*-*-*-*-*-*-*-*-
//clock enable Macros
//-*-*-*-*-*-*-*-*-*-*-*

#define RCC_GPIOA_CLOCK_EN() 	(RCC->APB2ENR |= 1<<2)
#define RCC_GPIOB_CLOCK_EN() 	(RCC->APB2ENR |= 1<<3)
#define RCC_GPIOC_CLOCK_EN() 	(RCC->APB2ENR |= 1<<4)
#define RCC_GPIOD_CLOCK_EN() 	(RCC->APB2ENR |= 1<<5)
#define RCC_GPIOE_CLOCK_EN() 	(RCC->APB2ENR |= 1<<6)
#define RCC_AFIO_CLOCK_EN() 	(RCC->APB2ENR |= 1<<0)

//-*-*-*-*-*-*-*-*-*-*-*-
//NVIC enable Macros
//-*-*-*-*-*-*-*-*-*-*-*
#define NVIC_EXTI0_IRQ_EN()			(NVIC_ISER0 |= (1<<6));
#define NVIC_EXTI1_IRQ_EN()			(NVIC_ISER0 |= (1<<7));
#define NVIC_EXTI2_IRQ_EN()			(NVIC_ISER0 |= (1<<8));
#define NVIC_EXTI3_IRQ_EN()			(NVIC_ISER0 |= (1<<9));
#define NVIC_EXTI4_IRQ_EN()			(NVIC_ISER0 |= (1<<10));
#define NVIC_EXTI9_5_IRQ_EN()		(NVIC_ISER0 |= (1<<23));
#define NVIC_EXTI15_10IRQ_EN()		(NVIC_ISER1 |= (1<<8));


//-*-*-*-*-*-*-*-*-*-*-*-
//NVIC disable Macros
//-*-*-*-*-*-*-*-*-*-*-*
#define NVIC_EXTI0_IRQ_Disable()			(NVIC_ICER0 |= (1<<6));
#define NVIC_EXTI1_IRQ_Disable()			(NVIC_ICER0 |= (1<<7));
#define NVIC_EXTI2_IRQ_Disable()			(NVIC_ICER0 |= (1<<8));
#define NVIC_EXTI3_IRQ_Disable()			(NVIC_ICER0 |= (1<<9));
#define NVIC_EXTI4_IRQ_Disable()			(NVIC_ICER0 |= (1<<10));
#define NVIC_EXTI9_5_IRQ_Disable()			(NVIC_ICER0 |= (1<<23));
#define NVIC_EXTI15_10IRQ_Disable()			(NVIC_ICER1 |= (1<<8));

//EXTI
//IVT
#define EXTI0_IRQ					6
#define EXTI1_IRQ					7
#define EXTI2_IRQ					8
#define EXTI3_IRQ					9
#define EXTI4_IRQ					10
#define EXTI9_5_IRQ				    23
#define EXTI15_10_IRQ				40



#endif /* STM32F103X6_H_ */
